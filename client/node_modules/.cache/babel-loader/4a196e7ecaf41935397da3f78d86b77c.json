{"ast":null,"code":"var _jsxFileName = \"/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/vasst/Vasst.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Scroll from '../Scroll'; //Impot actions\n\nimport { userMessage, sendMessage } from \"../../actions/assistant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Vasst = ({\n  chat,\n  userMessage,\n  sendMessage\n}) => {\n  _s();\n\n  //Handles user message\n  const [message, setMessage] = useState(\"\");\n  const [clear, setClear] = useState(false);\n  const endOfMessages = useRef(null);\n  const historyContainer = useRef();\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {// scrollToBottom()\n  }, [chat]); //Handle user's submission\n\n  const handleClick = async e => {\n    const code = e.keyCode || e.which;\n\n    if (code === 13) {\n      console.log(message);\n      userMessage(message);\n      sendMessage(message);\n      setMessage(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container contact-form vh-100 dt w-100 pa5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Virtual Assistant \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Type in MENTAL/ DENTAL/ HEART to start \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc  ba bw1\",\n      style: {\n        overflow: 'scroll'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hc\",\n        className: \"historyContainer\",\n        children: chat.length === 0 ? \"\" : chat.map(msg => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: msg.type,\n            children: [\" \", msg.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 61\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"chatBox\",\n        className: \"chatBox\",\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: handleClick,\n        placeholder: \"Please type in symptoms and press enter\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // Map current redux state to Chat component as props\n\n\n_s(Vasst, \"sbUlhyxTM1hmMEOwDm1G4C0Qbyc=\");\n\n_c = Vasst;\n\nconst mapStateToProps = state => ({\n  //Allows us to access message queues inside chat component\n  chat: state.assistant.messages\n}); //Hook this up to redux -- Maps state to userMessage\n\n\nexport default connect(mapStateToProps, {\n  userMessage,\n  sendMessage\n})(Vasst);\n\nvar _c;\n\n$RefreshReg$(_c, \"Vasst\");","map":{"version":3,"sources":["/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/vasst/Vasst.js"],"names":["React","useState","useEffect","useRef","connect","Scroll","userMessage","sendMessage","Vasst","chat","message","setMessage","clear","setClear","endOfMessages","historyContainer","scrollToBottom","current","scrollIntoView","behavior","handleClick","e","code","keyCode","which","console","log","overflow","length","map","msg","type","target","value","mapStateToProps","state","assistant","messages"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Scroll from '../Scroll';\n\n//Impot actions\nimport { userMessage, sendMessage }  from \"../../actions/assistant\";\n\nconst Vasst = ({ chat, userMessage, sendMessage }) =>{\n//Handles user message\n  const [message, setMessage] = useState(\"\");\n  const [clear, setClear] = useState(false);\n  const endOfMessages = useRef(null);\n  const historyContainer = useRef();\n\n\n  const scrollToBottom = () => {\n    endOfMessages.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    // scrollToBottom()\n  }, [chat]);\n\n\n  //Handle user's submission\n  const handleClick = async(e) => {\n    const code = e.keyCode || e.which;\n    if(code === 13){\n      console.log(message);\n      userMessage(message);\n      sendMessage(message);\n      setMessage(\"\");\n    }\n\n  }\n\n  return(\n    <div className=\"container contact-form vh-100 dt w-100 pa5\">\n      <div className=\"tc\">\n        <h1> Virtual Assistant </h1>\n        <p> Type in MENTAL/ DENTAL/ HEART to start </p>\n        </div>\n        <div className = \"tc  ba bw1\" style={{overflow: 'scroll'}}>\n        {/* <button onClick={(e)=>clearDivs()}>clear</button> */}\n        <div id='hc' className=\"historyContainer\" >\n          {/* Handle Messages */}\n          {chat.length ===0 ? \"\" : chat.map(msg =>{  return <div  className= {msg.type} > {msg.message} </div> }) }\n          {/* <div ref={endOfMessages}></div> */}\n          {/* Handle Messages */}\n        </div>\n          <input\n            id=\"chatBox\"\n            className=\"chatBox\"\n            onChange = {(e)=> setMessage(e.target.value)}\n            onKeyPress={handleClick}\n            placeholder=\"Please type in symptoms and press enter\"\n            value={message}></input>\n            \n      </div>\n    </div>\n  );\n};\n\n// Map current redux state to Chat component as props\nconst mapStateToProps = (state) =>({\n  //Allows us to access message queues inside chat component\n  chat: state.assistant.messages,\n});\n\n//Hook this up to redux -- Maps state to userMessage\nexport default connect( mapStateToProps, {userMessage, sendMessage})(Vasst);\n"]},"metadata":{},"sourceType":"module"}