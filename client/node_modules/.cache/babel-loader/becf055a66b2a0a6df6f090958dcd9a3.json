{"ast":null,"code":"var _jsxFileName = \"/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/ForgotPassword.js\";\n\n/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport LinkButtons from './LinkButtons';\nimport SubmitButtons from './SubmitButtons';\nimport registerButton from './ButtonStyles';\nimport homeButton from './ButtonStyles';\nimport forgotButton from './ButtonStyles';\nimport inputStyle from './ButtonStyles';\nimport HeaderBar from './HeaderBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = {\n  pageTitle: 'Forgot Password Screen'\n};\n\nclass ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.sendEmail = async e => {\n      e.preventDefault();\n      const {\n        email\n      } = this.state;\n\n      if (email === '') {\n        this.setState({\n          showError: false,\n          messageFromServer: '',\n          showNullError: true\n        });\n      } else {\n        try {\n          const response = await axios.post('http://localhost:5000/api/forgotPassword', {\n            email\n          });\n          console.log(response.data);\n\n          if (response.data === 'recovery email sent') {\n            this.setState({\n              showError: false,\n              messageFromServer: 'recovery email sent',\n              showNullError: false\n            });\n          }\n        } catch (error) {\n          console.error(error.response.data);\n\n          if (error.response.data === 'email not in db') {\n            this.setState({\n              showError: true,\n              messageFromServer: '',\n              showNullError: false\n            });\n          }\n        }\n      }\n    };\n\n    this.state = {\n      email: '',\n      showError: false,\n      messageFromServer: '',\n      showNullError: false\n    };\n  }\n\n  render() {\n    const {\n      email,\n      messageFromServer,\n      showNullError,\n      showError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container vh-100 dt w-100 pa5\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"profile-form tc\",\n        onSubmit: this.sendEmail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: inputStyle,\n            id: \"email\",\n            className: \"tc\",\n            value: email,\n            onChange: this.handleChange('email'),\n            name: \"txtName\",\n            class: \"form-control\",\n            placeholder: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-l\",\n          children: \" Reset \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), showNullError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The email address cannot be null.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), showError && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"That email address isn't recognized. Please try again or register for a new account.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinkButtons, {\n          buttonText: \"Register\",\n          buttonStyle: registerButton,\n          link: \"/signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), messageFromServer === 'recovery email sent' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Password Reset Email Successfully Sent!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LinkButtons, {\n        buttonText: \"Go Home\",\n        buttonStyle: homeButton,\n        link: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/ForgotPassword.js"],"names":["React","Component","TextField","axios","LinkButtons","SubmitButtons","registerButton","homeButton","forgotButton","inputStyle","HeaderBar","title","pageTitle","ForgotPassword","constructor","handleChange","name","event","setState","target","value","sendEmail","e","preventDefault","email","state","showError","messageFromServer","showNullError","response","post","console","log","data","error","render"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport LinkButtons from './LinkButtons';\nimport SubmitButtons from './SubmitButtons';\nimport registerButton from './ButtonStyles';\nimport homeButton from './ButtonStyles';\nimport forgotButton from './ButtonStyles';\nimport inputStyle from './ButtonStyles';\nimport HeaderBar from './HeaderBar';\n\nconst title = {\n  pageTitle: 'Forgot Password Screen',\n};\n\nclass ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      showError: false,\n      messageFromServer: '',\n      showNullError: false,\n    };\n  }\n\n  handleChange = name => (event) => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  sendEmail = async (e) => {\n    e.preventDefault();\n    const { email } = this.state;\n    if (email === '') {\n      this.setState({\n        showError: false,\n        messageFromServer: '',\n        showNullError: true,\n      });\n    } else {\n      try {\n        const response = await axios.post(\n          'http://localhost:5000/api/forgotPassword',\n          {\n            email,\n          },\n        );\n        console.log(response.data);\n        if (response.data === 'recovery email sent') {\n          this.setState({\n            showError: false,\n            messageFromServer: 'recovery email sent',\n            showNullError: false,\n          });\n        }\n      } catch (error) {\n        console.error(error.response.data);\n        if (error.response.data === 'email not in db') {\n          this.setState({\n            showError: true,\n            messageFromServer: '',\n            showNullError: false,\n          });\n        }\n      }\n    }\n  };\n\n  render() {\n    const {\n email, messageFromServer, showNullError, showError \n} = this.state;\n\n    return (\n      <div className=\"container vh-100 dt w-100 pa5\">\n        <HeaderBar title={title} />\n        <br/>\n        <form className=\"profile-form tc\" onSubmit={this.sendEmail}>\n        <div class=\"form-group\">\n              <input type=\"text\" style={inputStyle}\n            id=\"email\"\n            className=\"tc\" value={email} \n            onChange={this.handleChange('email')} name=\"txtName\" class=\"form-control\" placeholder=\"Email Address\"/>\n         </div>\n          {/* <TextField\n            style={inputStyle}\n            id=\"email\"\n            className='pa2'\n            value={email}\n            onChange={this.handleChange('email')}\n            placeholder=\"Email Address\"\n          /> */}\n\n          <button className=\"btn btn-primary btn-l\"> Reset </button>\n        </form>\n        {showNullError && (\n          <div>\n            <p>The email address cannot be null.</p>\n          </div>\n        )}\n        {showError && (\n          <div>\n            <p>\n              That email address isn&apos;t recognized. Please try again or\n              register for a new account.\n            </p>\n            <LinkButtons\n              buttonText=\"Register\"\n              buttonStyle={registerButton}\n              link=\"/signup\"\n            />\n          </div>\n        )}\n        {messageFromServer === 'recovery email sent' && (\n          <div>\n            <h3>Password Reset Email Successfully Sent!</h3>\n          </div>\n        )}\n        <LinkButtons buttonText=\"Go Home\" buttonStyle={homeButton} link=\"/\" />\n      </div>\n    );\n  }\n}\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}