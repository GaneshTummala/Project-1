{"ast":null,"code":"var _jsxFileName = \"/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport LinkButtons from './LinkButtons';\nimport SubmitButtons from './SubmitButtons';\nimport { updateButton, loginButton } from './ButtonStyles';\nimport homeButton from './ButtonStyles';\nimport forgotButton from './ButtonStyles';\nimport inputStyle from './ButtonStyles';\nimport HeaderBar from './HeaderBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loading = {\n  margin: '1em',\n  fontSize: '24px'\n};\nconst title = {\n  pageTitle: 'Password Reset Screen'\n};\nexport default class ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.updatePassword = async e => {\n      e.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      const {\n        match: {\n          params: {\n            token\n          }\n        }\n      } = this.props;\n\n      try {\n        const response = await axios.put('http://localhost:5000/api/updatePasswordViaEmail', {\n          username,\n          password,\n          resetPasswordToken: token\n        });\n        console.log(response.data);\n\n        if (response.data.message === 'password updated') {\n          this.setState({\n            updated: true,\n            error: false\n          });\n        } else {\n          this.setState({\n            updated: false,\n            error: true\n          });\n        }\n      } catch (error) {\n        console.log(error.response.data);\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      updated: false,\n      isLoading: true,\n      error: false\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          token\n        }\n      }\n    } = this.props;\n\n    try {\n      const response = await axios.get(`http://localhost:5000/api/resetPassword/${token}`); // console.log(response);\n\n      if (response.data.message === 'password reset link a-ok') {\n        console.log(\"Response from reset \", response.data);\n        this.setState({\n          username: response.data.username,\n          updated: false,\n          isLoading: false,\n          error: false\n        });\n      }\n    } catch (error) {\n      console.log(error.response.data);\n      this.setState({\n        updated: false,\n        isLoading: false,\n        error: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      password,\n      error,\n      isLoading,\n      updated\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n          title: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: loading,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Problem resetting password. Please send another reset link.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinkButtons, {\n            buttonText: \"Go Home\",\n            buttonStyle: homeButton,\n            link: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinkButtons, {\n            buttonStyle: forgotButton,\n            buttonText: \"Forgot Password?\",\n            link: \"/forgotPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n          title: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: loading,\n          children: \"Loading User Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container vh-100 dt w-100 pa5\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"password-form\",\n        onSubmit: this.updatePassword,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group pa3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            style: inputStyle,\n            id: \"password\",\n            className: \"btn btn-primary btn-sm\",\n            value: password,\n            onChange: this.handleChange('password'),\n            class: \"form-control\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger pa2\",\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), updated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pa2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your password has been successfully reset, please try logging in again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LinkButtons, {\n          buttonStyle: loginButton,\n          buttonText: \"Login\",\n          link: \"/signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LinkButtons, {\n        buttonText: \"Go Home\",\n        buttonStyle: homeButton,\n        link: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nResetPassword.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      token: PropTypes.string.isRequired\n    })\n  })\n};","map":{"version":3,"sources":["/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/ResetPassword.js"],"names":["React","Component","TextField","axios","PropTypes","LinkButtons","SubmitButtons","updateButton","loginButton","homeButton","forgotButton","inputStyle","HeaderBar","loading","margin","fontSize","title","pageTitle","ResetPassword","constructor","handleChange","name","event","setState","target","value","updatePassword","e","preventDefault","username","password","state","match","params","token","props","response","put","resetPasswordToken","console","log","data","message","updated","error","isLoading","componentDidMount","get","render","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport LinkButtons from './LinkButtons';\nimport SubmitButtons from './SubmitButtons';\nimport {updateButton, loginButton} from './ButtonStyles';\nimport homeButton  from './ButtonStyles';\nimport forgotButton from './ButtonStyles';\nimport inputStyle from './ButtonStyles';\nimport HeaderBar from './HeaderBar';\n\n\nconst loading = {\n    margin: '1em',\n    fontSize: '24px',\n  };\n  \n  const title = {\n    pageTitle: 'Password Reset Screen',\n  };\n  \n  export default class ResetPassword extends Component {\n    constructor() {\n      super();\n  \n      this.state = {\n        username: '',\n        password: '',\n        updated: false,\n        isLoading: true,\n        error: false,\n      };\n    }\n  \n    async componentDidMount() {\n      const {\n        match: {\n          params: { token },\n        },\n      } = this.props;\n      try {\n        const response = await axios.get(`http://localhost:5000/api/resetPassword/${token}`);\n        // console.log(response);\n        if (response.data.message === 'password reset link a-ok') {\n          console.log(\"Response from reset \",response.data)\n          this.setState({\n            username: response.data.username,\n            updated: false,\n            isLoading: false,\n            error: false,\n          });\n        }\n      } catch (error) {\n        console.log(error.response.data);\n        this.setState({\n          updated: false,\n          isLoading: false,\n          error: true,\n        });\n      }\n    }\n  \n    handleChange = name => (event) => {\n      this.setState({\n        [name]: event.target.value,\n      });\n    };\n  \n    updatePassword = async (e) => {\n      e.preventDefault();\n      const { username, password } = this.state;\n      const {\n        match: {\n          params: { token },\n        },\n      } = this.props;\n      try {\n        const response = await axios.put(\n          'http://localhost:5000/api/updatePasswordViaEmail',\n          {\n            username,\n            password,\n            resetPasswordToken: token,\n          },\n        );\n        console.log(response.data);\n        if (response.data.message === 'password updated') {\n          this.setState({\n            updated: true,\n            error: false,\n          });\n        } else {\n          this.setState({\n            updated: false,\n            error: true,\n          });\n        }\n      } catch (error) {\n        console.log(error.response.data);\n      }\n    };\n  \n    render() {\n      const {\n   password, error, isLoading, updated \n  } = this.state;\n  \n      if (error) {\n        return (\n          <div>\n            <HeaderBar title={title} />\n            <div style={loading}>\n              <h4>Problem resetting password. Please send another reset link.</h4>\n              <LinkButtons\n                buttonText=\"Go Home\"\n                buttonStyle={homeButton}\n                link=\"/\"\n              />\n              <LinkButtons\n                buttonStyle={forgotButton}\n                buttonText=\"Forgot Password?\"\n                link=\"/forgotPassword\"\n              />\n            </div>\n          </div>\n        );\n      }\n      if (isLoading) {\n        return (\n          <div>\n            <HeaderBar title={title} />\n            <div style={loading}>Loading User Data...</div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"container vh-100 dt w-100 pa5\">\n          <HeaderBar title={title} />\n          <form className=\"password-form\" onSubmit={this.updatePassword}>\n            {/* <TextField\n              style={inputStyle}\n              id=\"password\"\n              label=\"password\"\n              onChange={this.handleChange('password')}\n              value={password}\n              type=\"password\"\n            /> */}\n            <div className=\"form-group pa3\">\n              <input type=\"password\" style={inputStyle}\n              id=\"password\"\n              className=\"btn btn-primary btn-sm\" value={password} \n              onChange={this.handleChange('password')} class=\"form-control\" placeholder=\"Password\"/>\n            </div>\n            <button\n              className=\"btn btn-danger pa2\"\n              >Update Password</button>\n          </form>\n  \n          {updated && (\n            <div className=\"pa2\">\n              <p>\n                Your password has been successfully reset, please try logging in\n                again.\n              </p>\n              <LinkButtons\n                buttonStyle={loginButton}\n                buttonText=\"Login\"\n                link=\"/signin\"\n              />\n            </div>\n          )}\n          <LinkButtons buttonText=\"Go Home\" buttonStyle={homeButton} link=\"/\" />\n        </div>\n      );\n    }\n  }\n  \n  ResetPassword.propTypes = {\n    // eslint-disable-next-line react/require-default-props\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        token: PropTypes.string.isRequired,\n      }),\n    }),\n  };"]},"metadata":{},"sourceType":"module"}