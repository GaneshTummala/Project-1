{"ast":null,"code":"//Import types\nimport { INPUT_SUCCESS, INPUT_FAIL, SESSION_FAIL, SESSION_SUCCESS, MESSAGE_FAIL, MESSAGE_SUCCESS } from \"./types\"; //import axios\n\nimport axios from \"axios\"; //Function handles user msg\n\nexport const userMessage = message => async dispatch => {\n  try {\n    dispatch({\n      type: INPUT_SUCCESS,\n      payload: message\n    });\n  } catch (e) {\n    dispatch({\n      type: INPUT_FAIL\n    });\n  }\n}; //Creates a session - API call (Call to get session ID for assistant, which can be used to communicate with backend)\n\nexport const createSession = () => async dispatch => {\n  console.log(\"Calling action creation session\");\n\n  try {\n    const res = await axios.get(\"/api/watson/session\");\n    dispatch({\n      type: SESSION_SUCCESS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: SESSION_FAIL\n    });\n  }\n}; //  Sends the message to the bot - API CALL\n\nexport const sendMessage = message => async dispatch => {\n  try {\n    const body = {\n      input: message\n    };\n    const headers = {\n      'session_id': localStorage.session\n    };\n    console.log(headers);\n    const res = await axios.post(\"/api/watson/message\", body, {\n      headers: headers\n    });\n    console.log(res);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text\n    });\n  } catch (err) {\n    dispatch({\n      type: MESSAGE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/actions/assistant.js"],"names":["INPUT_SUCCESS","INPUT_FAIL","SESSION_FAIL","SESSION_SUCCESS","MESSAGE_FAIL","MESSAGE_SUCCESS","axios","userMessage","message","dispatch","type","payload","e","createSession","console","log","res","get","data","sendMessage","body","input","headers","localStorage","session","post","output","generic","text","err"],"mappings":"AAAA;AACA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,YAAnC,EAAiDC,eAAjD,EAAkEC,YAAlE,EAAgFC,eAAhF,QAAsG,SAAtG,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa,MAAMC,QAAN,IAAkB;AACxD,MAAG;AACDA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACV,aAAN;AAAqBW,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACD,GAFD,CAEC,OAAMI,CAAN,EAAQ;AACPH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACT;AAAN,KAAD,CAAR;AACD;AACF,CANM,C,CAQP;;AACA,OAAO,MAAMY,aAAa,GAAG,MAAM,MAAMJ,QAAN,IAAmB;AACpDK,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,MAAG;AACD,UAAMC,GAAG,GAAI,MAAMV,KAAK,CAACW,GAAN,CAAU,qBAAV,CAAnB;AACAR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,eAAP;AAAwBQ,MAAAA,OAAO,EAACK,GAAG,CAACE;AAApC,KAAD,CAAR;AACD,GAHD,CAGC,OAAMN,CAAN,EAAQ;AACPH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACD;AACF,CARM,C,CAUP;;AACA,OAAO,MAAMiB,WAAW,GAAIX,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMW,IAAI,GAAG;AAAEC,MAAAA,KAAK,EAAEb;AAAT,KAAb;AACA,UAAMc,OAAO,GAAE;AAAE,oBAAcC,YAAY,CAACC;AAA7B,KAAf;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA,UAAMN,GAAG,GAAG,MAAMV,KAAK,CAACmB,IAAN,CAAW,qBAAX,EAAkCL,IAAlC,EAAwC;AAAEE,MAAAA,OAAO,EAAEA;AAAX,KAAxC,CAAlB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,eADC;AAEPM,MAAAA,OAAO,EAAEK,GAAG,CAACE,IAAJ,CAASQ,MAAT,CAAgBC,OAAhB,CAAwB,CAAxB,EAA2BC;AAF7B,KAAD,CAAR;AAKD,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZpB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAAD,CAAR;AACD;AACF,CAfM","sourcesContent":["//Import types\nimport {INPUT_SUCCESS, INPUT_FAIL, SESSION_FAIL, SESSION_SUCCESS, MESSAGE_FAIL, MESSAGE_SUCCESS} from \"./types\";\n\n//import axios\nimport axios from \"axios\"\n\n//Function handles user msg\nexport const userMessage = (message) => async(dispatch) =>{\n  try{\n    dispatch({type:INPUT_SUCCESS, payload: message})\n  }catch(e){\n    dispatch({type:INPUT_FAIL})\n  }\n};\n\n//Creates a session - API call (Call to get session ID for assistant, which can be used to communicate with backend)\nexport const createSession = () => async(dispatch) => {\n  console.log(\"Calling action creation session\");\n  try{\n    const res  = await axios.get(\"/api/watson/session\");\n    dispatch({type: SESSION_SUCCESS, payload:res.data});\n  }catch(e){\n    dispatch({type: SESSION_FAIL,});\n  }\n}\n\n//  Sends the message to the bot - API CALL\nexport const sendMessage = (message) => async (dispatch) => {\n  try {\n    const body = { input: message };\n    const headers ={ 'session_id': localStorage.session};\n    console.log(headers);\n    const res = await axios.post(\"/api/watson/message\", body, { headers: headers });\n    console.log(res);\n    dispatch({\n      type: MESSAGE_SUCCESS,\n      payload: res.data.output.generic[0].text\n\n    });\n  } catch (err) {\n    dispatch({ type: MESSAGE_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}