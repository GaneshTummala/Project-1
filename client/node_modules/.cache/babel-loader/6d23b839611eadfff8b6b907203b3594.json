{"ast":null,"code":"var _jsxFileName = \"/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/Scheduler.js\",\n    _s = $RefreshSig$();\n\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport { useEffect, useState } from 'react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scheduler(props, loggedState) {\n  _s();\n\n  const [prop, setProp] = useState({\n    props\n  });\n  const [currentEvents, setCurrentEvents] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n\n  async function getAppointments() {\n    return fetch(`${config.baseUrl}/appointments`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"token\": localStorage.getItem('token')\n      }\n    }).then(res => {\n      return res.json();\n    });\n  }\n\n  const loadAppointments = async () => {\n    const appointments = await getAppointments();\n    console.log(\"User :\", appointments);\n    setCurrentEvents(appointments);\n  };\n\n  useEffect(() => {\n    if (loggedState) loadAppointments();\n  }, []); // const dates = { 'a': {'start': 6, 'end': 10}, 'b':{'start': 16, 'end': 21}}\n\n  console.log(prop);\n\n  if (prop.props.location.hasOwnProperty(\"aboutProps\") && prop.props.location.aboutProps.hasOwnProperty(\"name\")) {\n    console.log(props.location.aboutProps.name);\n  } else {\n    console.log(\"Error\");\n  }\n\n  const handleDateClick = arg => {\n    // bind with an arrow function\n    alert(arg.dateStr);\n    console.log(arg.dateStr);\n  };\n\n  const renderSidebarEvent = event => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: formatDate(event.start, {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, event._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this);\n  };\n\n  const AMPM = time => {\n    if (time < 12) {\n      return \"AM\";\n    } else {\n      return \"PM\";\n    }\n  };\n\n  const renderSidebar = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scheduler-sidebar vh-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduler-sidebar-section\",\n          children: [props.location.hasOwnProperty(\"aboutProps\") && props.location.aboutProps.hasOwnProperty(\"name\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Schedule an Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Doctor Name: Dr. \", props.location.aboutProps.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Days Available: \", props.location.aboutProps.availability]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Timings:  \", (props.location.aboutProps.timings.start > 12 ? props.location.aboutProps.timings.start - 12 : props.location.aboutProps.timings.start) + \" \" + AMPM(props.location.aboutProps.timings.start), \" to \", props.location.aboutProps.timings.end - 12 + \" \" + AMPM(props.location.aboutProps.timings.end)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Instruction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Select dates and you will be prompted to create a new event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Drag, drop, and resize events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click an event to delete it\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduler-sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"All Events (\", currentEvents.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentEvents.map(renderSidebarEvent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"pa3\",\n          to: \"/doctors\",\n          children: \"Go back to results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this);\n  };\n\n  let eventGuid = 0;\n\n  const createEventId = () => {\n    return String(eventGuid++);\n  };\n\n  const dayMapping = day => {\n    const days = {\n      'sunday': 0,\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6\n    };\n\n    if (day.toLowerCase() in days) {\n      return days[day.toLowerCase()];\n    }\n  };\n\n  const handleDateSelect = selectInfo => {\n    console.log(selectInfo);\n    handleModal(); // let title = prompt('Please enter a new title for your event')\n\n    let calendarApi = selectInfo.view.calendar;\n    calendarApi.unselect(); // clear date selection\n\n    let title = \"Appointment with Dr. \" + props.location.aboutProps.name + \" is fixed\";\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      });\n    }\n  };\n\n  const handleEventClick = clickInfo => {\n    if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      console.log(\"True\");\n      clickInfo.event.remove();\n      setMobile(\"\");\n      setEmail(\"\");\n    }\n  };\n\n  async function postEvent(event) {\n    return fetch(`${config.baseUrl}/appointments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"token\": localStorage.getItem('token')\n      },\n      body: JSON.stringify(event)\n    }).then(data => data.json());\n  }\n\n  const addEvent = async (events, did) => {\n    for (const evt of events) {\n      console.log(\"Event: \", evt);\n      const reply = await postEvent({\n        d_id: did,\n        start: evt.start,\n        title: evt.title,\n        end: evt.end\n      });\n\n      if (reply.hasOwnProperty('error')) {\n        console.log(\"Error :\", reply.error);\n      } else {\n        console.log(\"Error :\", reply.message);\n      }\n    }\n  };\n\n  const handleEvents = events => {\n    let did = 0;\n\n    if (props.location.hasOwnProperty(\"aboutProps\") && props.location.aboutProps.hasOwnProperty(\"did\")) {\n      did = props.location.aboutProps.did;\n    }\n\n    if (did != 0) {\n      addEvent(events, did);\n    }\n\n    setCurrentEvents(events);\n  };\n\n  const checkAllow = selectInfo => {\n    var st = selectInfo.start;\n    var startDate = new Date(selectInfo.startStr);\n    var sday = startDate.getDay();\n    var sminutes = startDate.getMinutes();\n    var shours = startDate.getHours();\n    var endDate = new Date(selectInfo.endStr);\n    var eminutes = endDate.getMinutes();\n    var ehours = endDate.getHours();\n    let availDays = prop.props.location.aboutProps.availability.split(',');\n    availDays.forEach(day => {\n      if (dayMapping(day) != sday) {\n        return false;\n      }\n    });\n    console.log(availDays);\n\n    if (shours >= prop.props.location.aboutProps.timings.start && ehours <= prop.props.location.aboutProps.timings.end && currentEvents.length <= 0 && ehours - shours <= 1) {\n      return true;\n    } else return false;\n  };\n\n  const handleModal = () => {\n    setModalShow(!modalShow);\n  };\n\n  const handleSubmit = () => {\n    if (!mobile) {\n      window.alert(\"Please enter required details before submission!!\");\n    } else {\n      handleModal();\n      console.log(mobile, email);\n    }\n  };\n\n  const onChangeMobile = event => {\n    setMobile(event.target.value);\n  };\n\n  const onChangeEmail = event => {\n    setEmail(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 h-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scheduler\",\n      children: [renderSidebar(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scheduler-main\",\n        children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next today',\n            right: 'title'\n          },\n          initialView: \"timeGridWeek\",\n          disableDragging: true,\n          selectable: true,\n          selectAllow: checkAllow,\n          selectable: true // editable= {true}\n          ,\n          dayMaxEvents: true,\n          select: handleDateSelect,\n          eventClick: handleEventClick,\n          eventsSet: handleEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: modalShow,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              noValidate: true,\n              validated: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter email\",\n                  onChange: onChangeEmail.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                  className: \"text-muted\",\n                  children: \"We'll never share your email with anyone else.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicMobile\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Mobile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  required: true,\n                  type: \"mobile\",\n                  placeholder: \"Mobile Number\",\n                  onChange: onChangeMobile.bind(this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                handleSubmit();\n              },\n              children: \" Continue \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Scheduler, \"jWOT5XJxPrTrnzhYHmLk/ns8dVA=\");\n\n_c = Scheduler;\nexport default Scheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scheduler\");","map":{"version":3,"sources":["/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/components/Scheduler.js"],"names":["FullCalendar","formatDate","useEffect","useState","dayGridPlugin","timeGridPlugin","interactionPlugin","Modal","Button","Form","Link","config","Scheduler","props","loggedState","prop","setProp","currentEvents","setCurrentEvents","modalShow","setModalShow","email","setEmail","mobile","setMobile","getAppointments","fetch","baseUrl","method","headers","localStorage","getItem","then","res","json","loadAppointments","appointments","console","log","location","hasOwnProperty","aboutProps","name","handleDateClick","arg","alert","dateStr","renderSidebarEvent","event","start","year","month","day","title","_id","AMPM","time","renderSidebar","availability","timings","end","length","map","eventGuid","createEventId","String","dayMapping","days","toLowerCase","handleDateSelect","selectInfo","handleModal","calendarApi","view","calendar","unselect","addEvent","id","startStr","endStr","allDay","handleEventClick","clickInfo","window","confirm","remove","postEvent","body","JSON","stringify","data","events","did","evt","reply","d_id","error","message","handleEvents","checkAllow","st","startDate","Date","sday","getDay","sminutes","getMinutes","shours","getHours","endDate","eminutes","ehours","availDays","split","forEach","handleSubmit","onChangeMobile","target","value","onChangeEmail","left","right","bind"],"mappings":"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","sourcesContent":["import FullCalendar, {formatDate} from '@fullcalendar/react'\nimport { useEffect, useState } from 'react';\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport {Link} from 'react-router-dom'\nimport config from '../config'\n\nfunction Scheduler(props, loggedState) {\n\n\n    const [prop, setProp] = useState({props});\n    const [currentEvents, setCurrentEvents] = useState([]);\n    const [modalShow, setModalShow] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [mobile, setMobile] = useState(\"\");\n\n\n    async function getAppointments(){\n      return fetch(`${config.baseUrl}/appointments`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"token\": localStorage.getItem('token')\n        },\n      }).then((res) => {\n        return res.json(); \n    })\n    }\n\n\n    const loadAppointments = async () => {\n      const appointments = await getAppointments();\n      console.log(\"User :\", appointments);\n      setCurrentEvents(appointments);\n    }\n\n\n    useEffect(() => {\n      if(loggedState)\n        loadAppointments();\n    }, [])\n\n\n\n    // const dates = { 'a': {'start': 6, 'end': 10}, 'b':{'start': 16, 'end': 21}}\n    console.log(prop);\n    if(prop.props.location.hasOwnProperty(\"aboutProps\") && prop.props.location.aboutProps.hasOwnProperty(\"name\")){\n      console.log(props.location.aboutProps.name)\n    }else{\n      console.log(\"Error\");\n    }\n\n    const handleDateClick = (arg) => { // bind with an arrow function\n        alert(arg.dateStr)\n        console.log(arg.dateStr);\n      }\n\n      const renderSidebarEvent = (event) => {\n        return (\n          <li key={event._id}>\n            <b>{formatDate(event.start, {year: 'numeric', month: 'short', day: 'numeric'})}</b>\n            <i>{event.title}</i>\n          </li>\n        )\n      }\n\n      const AMPM = (time) => {\n        if(time < 12){\n          return \"AM\"\n        }else{\n          return \"PM\"\n        }\n      }\n\n      const renderSidebar = () => {\n        return (\n          <div className=\"\">\n           \n          <div className='scheduler-sidebar vh-100'>\n            <div className='scheduler-sidebar-section'>\n              {props.location.hasOwnProperty(\"aboutProps\") && props.location.aboutProps.hasOwnProperty(\"name\")?\n              <div>\n                <h2>Schedule an Appointment</h2>\n                <p>Doctor Name: Dr. {props.location.aboutProps.name}</p>\n                <p>Days Available: {props.location.aboutProps.availability}</p>\n                <p>Timings:  { (props.location.aboutProps.timings.start>12? props.location.aboutProps.timings.start-12 : props.location.aboutProps.timings.start) +\" \"+ AMPM(props.location.aboutProps.timings.start ) } to {props.location.aboutProps.timings.end-12+\" \"+ AMPM(props.location.aboutProps.timings.end ) }</p>\n              </div>\n              :<div> <h2>Instruction</h2></div>}\n              <ul>\n                <li>Select dates and you will be prompted to create a new event</li>\n                <li>Drag, drop, and resize events</li>\n                <li>Click an event to delete it</li>\n              </ul>\n            </div>\n            <div className='scheduler-sidebar-section'>\n              <h2>All Events ({currentEvents.length})</h2>\n              <ul>\n                {currentEvents.map(renderSidebarEvent)}\n              </ul>\n            </div>\n            {/* Back to results  */}\n            <Link className=\"pa3\" to=\"/doctors\">Go back to results</Link>\n          </div>\n            {/* { console.log(prop.props.history.goBack())  } */}\n            \n          </div>\n\n\n\n          \n        )\n      }\n\n      let eventGuid = 0;\n      const createEventId = () => {\n        return String(eventGuid++)\n      }\n\n      const dayMapping = (day) =>{\n        const days = {'sunday': 0, 'monday': 1, 'tuesday': 2, 'wednesday':3, 'thursday':4, 'friday':5, 'saturday':6};\n        if(day.toLowerCase() in days){\n          return days[day.toLowerCase()];\n        }\n      }\n\n\n      const handleDateSelect = (selectInfo) => {\n        console.log(selectInfo)\n        handleModal();\n        // let title = prompt('Please enter a new title for your event')\n        let calendarApi = selectInfo.view.calendar\n        \n        calendarApi.unselect() // clear date selection\n        let title = \"Appointment with Dr. \" + props.location.aboutProps.name  + \" is fixed\";\n        if (title) {\n          calendarApi.addEvent({\n            id: createEventId(),\n            title,\n            start: selectInfo.startStr,\n            end: selectInfo.endStr,\n            allDay: selectInfo.allDay\n          })\n        }\n      }\n\n\n      const handleEventClick = (clickInfo) => {\n        if (window.confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n          console.log(\"True\")\n          clickInfo.event.remove();\n          setMobile(\"\");\n          setEmail(\"\");\n        }\n      }\n\n      async function postEvent ( event ){\n        return fetch(`${config.baseUrl}/appointments`, {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json',\n          \"token\": localStorage.getItem('token')\n          },\n          body: JSON.stringify(event)\n        })\n          .then(data => data.json())\n         }\n\n\n\n      const addEvent = async (events, did) => {\n        for(const evt of events){\n          console.log(\"Event: \" ,evt);\n          const reply = await postEvent({d_id: did, start: evt.start, title: evt.title, end: evt.end });\n          if(reply.hasOwnProperty('error')){\n            console.log(\"Error :\", reply.error);\n          }else{\n            console.log(\"Error :\", reply.message);\n          }\n        }\n\n      }\n\n      const handleEvents = (events) => {\n        let did = 0;\n        if (props.location.hasOwnProperty(\"aboutProps\") && props.location.aboutProps.hasOwnProperty(\"did\")){\n          did = props.location.aboutProps.did;\n        }\n        if(did != 0)\n        {addEvent(events, did);}\n        setCurrentEvents(events);\n      }\n\n      const checkAllow = (selectInfo) => {  \n        var st = selectInfo.start;\n        var startDate = new Date(selectInfo.startStr);\n        var sday = startDate.getDay();\n        var sminutes = startDate.getMinutes();\n        var shours = startDate.getHours();\n        var endDate = new Date(selectInfo.endStr);\n        var eminutes = endDate.getMinutes();\n        var ehours = endDate.getHours();\n        let availDays = prop.props.location.aboutProps.availability.split(',');\n        availDays.forEach((day) => {\n          if(dayMapping(day) != sday){\n            return false;\n          }\n        });\n        console.log(availDays);\n        if(shours >= prop.props.location.aboutProps.timings.start && ehours<= prop.props.location.aboutProps.timings.end\n           && currentEvents.length <= 0 && ehours-shours<=1){\n          return true\n        }else\n        return false;\n      }\n\n      const handleModal = () =>{\n        setModalShow(!modalShow);\n      }\n\n      const handleSubmit = () => {\n        if(!mobile){\n          window.alert(\"Please enter required details before submission!!\");\n        }else{\n          handleModal();\n          console.log(mobile, email);\n        }\n      }\n\n      const onChangeMobile = (event) => {\n        setMobile(event.target.value)\n      }\n\n      const onChangeEmail = (event) => {\n        setEmail(event.target.value)\n      }\n      \n    return (\n      <div className=\"w-100 h-100\">\n    <div className='scheduler'>\n            {renderSidebar()}\n        <div className=\"scheduler-main\">         \n            <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={{\n                left: 'prev,next today',\n                right: 'title'\n              }}\n            initialView='timeGridWeek'\n            disableDragging={true}\n            selectable={true}\n            selectAllow = {checkAllow}\n            selectable = {true}\n            // editable= {true}\n            dayMaxEvents={true}\n            select = {handleDateSelect}\n            eventClick={handleEventClick}\n            eventsSet={handleEvents}\n            />\n\n            <Modal show={modalShow}>\n              <Modal.Header>\n                Book Appointment\n              </Modal.Header>\n              <Modal.Body>\n                <Form noValidate validated={true} >\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control  type=\"email\" placeholder=\"Enter email\"  onChange={(onChangeEmail.bind(this))} />\n                    <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicMobile\">\n                    <Form.Label>Mobile</Form.Label>\n                    <Form.Control required type=\"mobile\" placeholder=\"Mobile Number\" onChange={onChangeMobile.bind(this)}/>\n                  </Form.Group>\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button onClick={()=>{handleSubmit()}}> Continue </Button>\n              </Modal.Footer>\n            </Modal>\n            \n\n\n        </div>\n\n\n    </div>\n    </div>\n    )\n}\n\n\nexport default Scheduler;"]},"metadata":{},"sourceType":"module"}