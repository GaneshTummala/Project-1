{"ast":null,"code":"//import types\nimport { INPUT_FAIL, INPUT_SUCCESS, SESSION_FAIL, SESSION_SUCCESS, MESSAGE_SUCCESS, MESSAGE_FAIL } from \"../actions/types\"; //Initial State\n\nconst initialState = {\n  messages: []\n}; //Switch statement- on how to update states\n\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  let {\n    messages\n  } = state;\n\n  switch (type) {\n    case INPUT_SUCCESS:\n      messages = [...messages, {\n        message: payload,\n        type: \"user\"\n      }];\n      return { ...state,\n        messages\n      };\n\n    case INPUT_FAIL:\n      return { ...state\n      };\n\n    case SESSION_SUCCESS:\n      localStorage.setItem(\"session\", payload[\"session_id\"]);\n      return { ...state\n      };\n\n    case SESSION_FAIL:\n      return { ...state\n      };\n\n    case MESSAGE_SUCCESS:\n      console.log(payload);\n      messages = [...messages, {\n        message: payload,\n        type: \"bot\"\n      }];\n      return { ...state,\n        messages\n      };\n\n    case MESSAGE_FAIL:\n      return { ...state\n      };\n\n    default:\n      return { ...state\n      };\n  }\n});","map":{"version":3,"sources":["/Users/ganeshtummala/Desktop/5394/ohsfron/client/src/reducers/assistant.js"],"names":["INPUT_FAIL","INPUT_SUCCESS","SESSION_FAIL","SESSION_SUCCESS","MESSAGE_SUCCESS","MESSAGE_FAIL","initialState","messages","state","action","type","payload","message","localStorage","setItem","console","log"],"mappings":"AAAA;AACA,SAAQA,UAAR,EAAoBC,aAApB,EAAmCC,YAAnC,EAAiDC,eAAjD,EAAkEC,eAAlE,EAAmFC,YAAnF,QAAsG,kBAAtG,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAC;AADU,CAArB,C,CAIA;;AACA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACA,MAAI;AAAEF,IAAAA;AAAF,MAAeC,KAAnB;;AAEA,UAAOE,IAAP;AACE,SAAKT,aAAL;AACEM,MAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAc;AAACK,QAAAA,OAAO,EAAED,OAAV;AAAmBD,QAAAA,IAAI,EAAC;AAAxB,OAAd,CAAX;AACA,aAAO,EACL,GAAGF,KADE;AAELD,QAAAA;AAFK,OAAP;;AAKF,SAAKP,UAAL;AACQ,aAAM,EACJ,GAAGQ;AADC,OAAN;;AAIR,SAAKL,eAAL;AACEU,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,OAAO,CAAC,YAAD,CAAvC;AACA,aAAM,EACJ,GAAGH;AADC,OAAN;;AAIF,SAAKN,YAAL;AACI,aAAM,EACJ,GAAGM;AADC,OAAN;;AAGJ,SAAKJ,eAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAJ,MAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAa;AAACK,QAAAA,OAAO,EAAED,OAAV;AAAmBD,QAAAA,IAAI,EAAC;AAAxB,OAAb,CAAX;AACA,aAAM,EACJ,GAAGF,KADC;AAEJD,QAAAA;AAFI,OAAN;;AAKF,SAAKF,YAAL;AACE,aAAM,EACJ,GAAGG;AADC,OAAN;;AAKA;AACA,aAAM,EACJ,GAAGA;AADC,OAAN;AAtCJ;AA0CD,CA9CD","sourcesContent":["//import types\nimport {INPUT_FAIL, INPUT_SUCCESS, SESSION_FAIL, SESSION_SUCCESS, MESSAGE_SUCCESS, MESSAGE_FAIL} from \"../actions/types\";\n\n//Initial State\nconst initialState = {\n  messages:[],\n}\n\n//Switch statement- on how to update states\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  let { messages } = state;\n\n  switch(type){\n    case INPUT_SUCCESS:\n      messages = [...messages, {message: payload, type:\"user\"}];\n      return {\n        ...state,\n        messages\n      }\n\n    case INPUT_FAIL:\n            return{\n              ...state,\n            }\n\n    case SESSION_SUCCESS:\n      localStorage.setItem(\"session\", payload[\"session_id\"]);\n      return{\n        ...state,\n      }\n\n    case SESSION_FAIL:\n        return{\n          ...state,\n        }\n    case MESSAGE_SUCCESS:\n      console.log(payload);\n      messages = [...messages,{message: payload, type:\"bot\"}]\n      return{\n        ...state,\n        messages\n      }\n\n    case MESSAGE_FAIL:\n      return{\n        ...state,\n      }\n\n\n      default:\n      return{\n        ...state,\n      }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}